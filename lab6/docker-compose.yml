version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_PORT: 9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    ports:
      - "8081:8080"
    networks:
      - kafka_network

  go_app:
    build:
      context: .
      dockerfile: websocket_stream/Dockerfile
    container_name: go_app
    depends_on:
      - kafka
    env_file:
      - websocket_stream/.env
    environment:
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "battle_events"
    ports:
      - "8080:8080"
    networks:
      - kafka_network

  cpp_app:
    build:
      context: .
      dockerfile: game/Dockerfile
    container_name: cpp_app
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "battle_events"
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
